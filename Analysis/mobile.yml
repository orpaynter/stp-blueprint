name: Mobile CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      
      - name: Install dependencies
        run: cd mobile && npm ci
      
      - name: Run ESLint
        run: cd mobile && npm run lint
  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      
      - name: Install dependencies
        run: cd mobile && npm ci
      
      - name: Run tests
        run: cd mobile && npm test
  
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Install dependencies
        run: cd mobile && npm ci
      
      - name: Build Android
        run: |
          cd mobile
          npm run build:android
      
      - name: Upload Android build
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: mobile/android/app/build/outputs/apk/release/*.apk
  
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      
      - name: Install dependencies
        run: cd mobile && npm ci
      
      - name: Install CocoaPods
        run: |
          cd mobile/ios
          pod install
      
      - name: Build iOS
        run: |
          cd mobile
          npm run build:ios
      
      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: mobile/ios/build/Build/Products/Release-iphoneos/*.ipa
  
  deploy-android:
    name: Deploy Android
    runs-on: ubuntu-latest
    needs: build-android
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: android-build
          path: mobile/android/app/build/outputs/apk/release
      
      - name: Setup Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.oliversroofingandcontracting.orpaynter
          releaseFiles: mobile/android/app/build/outputs/apk/release/*.apk
          track: internal
          status: completed
          whatsNewDirectory: mobile/android/whatsnew
  
  deploy-ios:
    name: Deploy iOS
    runs-on: macos-latest
    needs: build-ios
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download iOS build
        uses: actions/download-artifact@v3
        with:
          name: ios-build
          path: mobile/ios/build/Build/Products/Release-iphoneos
      
      - name: Install Apple certificates
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_P12_CERTIFICATE }}
          p12-password: ${{ secrets.IOS_P12_PASSWORD }}
      
      - name: Upload to App Store
        uses: apple-actions/upload-app-store@v1
        with:
          app-path: mobile/ios/build/Build/Products/Release-iphoneos/*.ipa
          apple-id: ${{ secrets.APPLE_ID }}
          team-id: ${{ secrets.APPLE_TEAM_ID }}
          app-store-connect-api-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          app-store-connect-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          submit-for-review: false
