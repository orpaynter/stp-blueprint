name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: cd backend && npm ci
      
      - name: Run ESLint
        run: cd backend && npm run lint
  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: cd backend && npm ci
      
      - name: Run tests
        run: cd backend && npm test
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: cd backend && npm ci
      
      - name: Build
        run: cd backend && npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/dist
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: backend/dist
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push images to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_PREFIX: orpaynter
        run: |
          # Build and push each microservice
          cd backend
          
          # User Service
          cd services/user-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-user-service:${{ github.sha }} .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-user-service:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-user-service:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-user-service:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-user-service:latest
          cd ../..
          
          # Project Service
          cd services/project-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-project-service:${{ github.sha }} .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-project-service:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-project-service:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-project-service:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-project-service:latest
          cd ../..
          
          # Assessment Service
          cd services/assessment-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-assessment-service:${{ github.sha }} .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-assessment-service:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-assessment-service:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-assessment-service:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-assessment-service:latest
          cd ../..
          
          # Claim Service
          cd services/claim-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-claim-service:${{ github.sha }} .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-claim-service:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-claim-service:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-claim-service:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-claim-service:latest
          cd ../..
          
          # Payment Service
          cd services/payment-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-payment-service:${{ github.sha }} .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-payment-service:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-payment-service:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-payment-service:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-payment-service:latest
          cd ../..
          
          # Marketplace Service
          cd services/marketplace-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-marketplace-service:${{ github.sha }} .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-marketplace-service:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-marketplace-service:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-marketplace-service:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-marketplace-service:latest
          cd ../..
      
      - name: Update ECS services
        run: |
          # Update each ECS service with the new image
          aws ecs update-service --cluster orpaynter-cluster --service orpaynter-user-service --force-new-deployment
          aws ecs update-service --cluster orpaynter-cluster --service orpaynter-project-service --force-new-deployment
          aws ecs update-service --cluster orpaynter-cluster --service orpaynter-assessment-service --force-new-deployment
          aws ecs update-service --cluster orpaynter-cluster --service orpaynter-claim-service --force-new-deployment
          aws ecs update-service --cluster orpaynter-cluster --service orpaynter-payment-service --force-new-deployment
          aws ecs update-service --cluster orpaynter-cluster --service orpaynter-marketplace-service --force-new-deployment
